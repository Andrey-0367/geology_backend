#services:
#  db:
#    image: postgres:13.10
#    env_file: .env.production
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#    restart: unless-stopped
#  backend:
#    image: docker.io/pochek/geology_backend:latest
#    env_file: .env.production
#    command: >
#        sh -c "python manage.py collectstatic --noinput &&
#             gunicorn geology.wsgi:application --bind 0.0.0.0:8000 --workers 3"
#    volumes:
#      - static_volume:/app/collected_static
#      - media_volume:/app/media
#    depends_on:
#      - db
#    restart: unless-stopped
#
#  nginx:
#    image: docker.io/pochek/geology_nginx:latest
#    ports:
#      - "80:80"
#    volumes:
#      - static_volume:/var/html/static
#      - media_volume:/var/html/media
#    depends_on:
#      - backend
#    restart: always
#    command: >
#      sh -c "nginx -t && nginx -g 'daemon off;'"
#volumes:
#  pg_data:
#  static_volume:
#  media_volume:
services:
  db:
    image: postgres:13.10
    env_file: .env.production
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-network

  backend:
    image: docker.io/pochek/geology_backend:latest
    env_file: .env.production
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn geology.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static_volume:/app/collected_static
      - media_volume:/app/media
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
  nginx:
    image: docker.io/pochek/geology_nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    logging:
      options:
        tag: ""
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/geology_backend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/nginx/ssl-config.conf:/etc/nginx/ssl-config.conf:ro
      - static_volume:/var/html/static
      - media_volume:/var/html/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
    restart: always
    networks:
      - backend-network
volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  backend-network:
    driver: bridge


