#name: Deploy to Production
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v4
#
#    - name: Setup Docker Buildx
#      uses: docker/setup-buildx-action@v3
#
#    - name: Login to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        registry: docker.io
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#    - name: Build and push backend image
#      uses: docker/build-push-action@v5
#      with:
#        context: .
#        file: Dockerfile
#        push: true
#        tags: |
#          docker.io/pochek/geology_backend:latest
#        cache: false
#
#    - name: Build and push nginx image
#      uses: docker/build-push-action@v5
#      with:
#        context: nginx
#        file: nginx/Dockerfile
#        push: true
#        tags: |
#          docker.io/pochek/geology_nginx:latest
#        cache: false
#
#    - name: Deploy to server
#      uses: appleboy/ssh-action@v0.1.10
#      with:
#        host: ${{ secrets.SERVER_IP }}
#        port: ${{ secrets.SSH_PORT }}
#        username: ${{ secrets.SSH_USERNAME }}
#        key: ${{ secrets.SSH_PRIVATE_KEY }}
#        script: |
#          # Убедимся, что Docker работает
#          sudo systemctl start docker || true
#          sudo systemctl enable docker || true
#
#          # Добавим пользователя в группу docker
#          sudo usermod -aG docker $USER || true
#          newgrp docker || true
#
#          # Перейдем в директорию проекта
#          cd /opt/geology_backend
#
#          git reset --hard HEAD
#          git clean -fd
#          git pull origin main
#
#          # Обновим контейнеры
#          sudo docker compose pull
#
#          # Перезапустим приложение
#          sudo docker compose down
#          sudo docker compose up -d
#
#          # Применим миграции и соберем статику
#          sudo docker compose exec -T backend python manage.py migrate --noinput
#          sudo docker compose exec -T backend python manage.py collectstatic --noinput
#
#          # Проверим статус контейнеров
#          sudo docker compose ps
#          sudo docker compose logs --tail=20
#
#          sudo docker compose -f docker-compose.yml pull
#          sudo docker compose -f docker-compose.yml down
#          sudo docker compose -f docker-compose.yml up -d
#
#          # Проверка
#          sudo docker compose -f docker-compose.yml ps
#
#          # Проверим доступность админки
#          echo "Проверка админки:"
#          curl -I http://localhost/admin/ || true
          
          

name: Main geology_backend workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/geology_backend:latest

  build_nginx_and_push_to_docker_hub:
    name: Push nginx Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/geology_nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "geology"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /opt/geology_backend
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml down
            docker compose -f docker-compose.yml up -d
            docker compose -f docker-compose.yml exec backend python manage.py migrate
            docker compose -f docker-compose.yml exec backend python manage.py collectstatic --noinput
